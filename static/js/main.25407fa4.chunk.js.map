{"version":3,"sources":["i18n.js","components/LanguageSelector.js","components/VisitButton.js","components/GithubLinkButton.js","components/Table.jsx","components/TextLink.js","components/table/CellList.js","components/table/CellParagraph.js","components/table/CellImage.js","components/ProjectDetails.js","components/G0vJsonIconButton.js","components/table/NestedTableContainer.js","data.js","components/ProjectStatusBadget.js","components/ProjectTable.js","components/RepoTable.js","components/OrganizationTable.js","components/DeveloperTable.js","components/HackmdTable.js","components/HackmdTagTable.js","components/ProposalTable.js","components/ProposalEventTable.js","routes.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","Backend","initReactI18next","init","lng","backend","loadPath","process","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","backgroundColor","borderRadius","input","padding","languages","value","title","isDefault","LanguageSelector","classes","useTranslation","useState","currentValue","setCurrentValue","useEffect","cache","window","localStorage","getItem","changeLanguage","FormControl","variant","className","Select","labelId","id","onChange","event","target","setItem","label","size","OutlinedInput","map","MenuItem","key","VisitButton","url","tooltip","icon","isDisabled","startsWith","tooltipTitle","Tooltip","IconButton","disabled","aria-label","href","Button","color","GithubLinkButton","githubUrl","undefined","cellStyle","maxWidth","wordBreak","overflowWrap","cursor","fontSize","createMuiTheme","overrides","MUIDataTableToolbar","root","MUIDataTable","paper","responsiveScrollMaxHeight","maxHeight","MUIDataTableHeadCell","fontWeight","MUIDataTableBodyCell","MUIDataTableSelectCell","expandDisabled","visibility","MUIDataTableFilter","Table","data","columns","options","nested","updatedOptions","Object","assign","pagination","responsive","rowsPerPageOptions","rowsPerPage","filterType","fixedHeader","resizableColumns","selectableRows","isRowSelectable","onRowClick","rowData","rowMeta","item","dataIndex","console","log","print","TextLink","args","style","list","paddingInlineStart","CellList","targetKey","Array","isArray","keys","filter","i","index","JSON","stringify","CellParagraph","length","substring","img","CellImage","alt","Grid","container","justify","align","src","listContainer","overflow","width","palette","background","inline","display","image","ProjectDetails","project","t","Paper","xs","alignItems","g0vJson","thumbnail","List","ListItem","divider","ListItemText","primary","Typography","component","secondary","Fragment","iframe","height","border","marginBottom","closeButton","position","right","top","grey","G0vJsonIconButton","repo","open","setOpen","params","iframeUrl","join","onClick","Dialog","onBackdropClick","aria-labelledby","DialogTitle","DialogContent","nestedContainer","NestedTableContainer","children","TableRow","TableCell","colSpan","env","location","hostname","includes","getGithubDataUrl","getHackmdData","a","dataUrl","fetch","res","json","output","getHackmdDataByTag","inRepos","hackmdData","forEach","record","lastchangeAt","tags","tag","tagUrl","recentTitle","recentLastChangedAt","records","githubRepoUrl","push","getRepos","repos","matchRepo","find","x","targetName","toLowerCase","owner","login","name","html_url","hackmdUrl","sort","b","getGithubData","getOrganizations","githubInfo","type","reduce","items","fork","pushed_at","getProjects","g0vJsonUrl","name_zh","description_zh","description","getProposalEvents","values","headers","shift","replace","events","row","obj","header","split","term","date","event_name","dummy_event_type","proposals","reverse","badget","textAlign","ProjectStatusBadget","ProjectTable","inData","setData","status","keywords","needs","filterOptions","setFilterOptions","names","customBodyRender","moment","format","expandableRows","renderExpandableRow","allStatus","allKeywords","allNeeds","allLanguages","RepoTable","setLanguages","green","isRowExpandable","OrganizationTable","DeveloperTable","setRepos","contributors","contributor","repoContributions","contributions","details","majorRepoName","majorContributions","totalContributions","averageContributions","parseInt","toFixed","avatar_url","getContributorsFromRepos","HackmdTable","setTags","allTags","s","HackmdTagTable","ProposalTable","manpowers","setManpowers","ProposalEventTable","path","marginRight","space","flexGrow","button","marginLeft","Header","isLoading","setIsLoading","lastUpdatedAt","setLastUpdatedAt","setTimeout","updatedAt","AppBar","Toolbar","routes","to","Link","CircularProgress","fromNow","main","spinner","left","paddingTop","App","basename","Suspense","fallback","route","exact","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25407fa4.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\n\nconst defaultLng = 'zh-TW';\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    lng: defaultLng,\n    backend: {\n      /* translation file path */\n      loadPath: `${process.env.PUBLIC_URL}/assets/i18n/{{ns}}/{{lng}}.json`,\n    },\n    fallbackLng: defaultLng,\n    debug: process.env.NODE_ENV === 'development',\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n    ns: ['translations'],\n    defaultNS: 'translations',\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n      formatSeparator: ',',\n    },\n    react: {\n      wait: true,\n    },\n  });\n\nexport default i18n;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    backgroundColor: '#fff',\n    borderRadius: 5,\n  },\n  input: {\n    padding: '10px 14px',\n  },\n}));\n\nconst languages = [{\n  value: 'zh-TW',\n  title: '中文',\n  isDefault: true,\n}, {\n  value: 'en-US',\n  title: 'English',\n}];\n\nconst LanguageSelector = () => {\n  const classes = useStyles();\n  const { i18n } = useTranslation();\n  const [currentValue, setCurrentValue] = useState(languages[0].value);\n\n  const handleChange = (event) => {\n    i18n.changeLanguage(event.target.value);\n    setCurrentValue(event.target.value);\n    window.localStorage.setItem('language', event.target.value);\n  };\n\n  useEffect(() => {\n    const cache = window.localStorage.getItem('language');\n    if (cache) {\n      setCurrentValue(cache);\n      i18n.changeLanguage(cache);\n    }\n  }, [i18n]);\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <Select\n        labelId=\"translation\"\n        id=\"translation\"\n        value={currentValue}\n        onChange={handleChange}\n        label=\"Language\"\n        size=\"small\"\n        input={<OutlinedInput classes={{ input: classes.input }} />}\n      >\n        {languages.map(({ value, title }) => (\n          <MenuItem key={value} value={value}>{title}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default LanguageSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction VisitButton({ url, title = 'Visit', tooltip, icon, className }) {\n  const isDisabled = (!url || url === '' || !url.startsWith('http'));\n  const size = 'small';\n\n  const tooltipTitle = tooltip || (isDisabled ? '' : title);\n\n  if (icon) {\n    return (\n      <Tooltip title={tooltipTitle}>\n        <span>\n          <IconButton\n            className={className}\n            disabled={isDisabled}\n            aria-label={title}\n            // component=\"span\"\n            target=\"_blank\"\n            href={url}\n            size={size}\n          >\n            {icon}\n          </IconButton>\n        </span>\n      </Tooltip>);\n  }\n  return (\n    <Button\n      className={className}\n      variant=\"outlined\"\n      color=\"primary\"\n      size={size}\n      target=\"_blank\"\n      href={url}\n      disabled={isDisabled}\n    >\n      {title}\n    </Button>);\n}\n\nVisitButton.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  tooltip: PropTypes.string,\n  icon: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default VisitButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport VisitButton from './VisitButton';\n\nfunction GithubLinkButton({ url, title = 'GitHub', className }) {\n  const githubUrl = url ?\n    (url.startsWith('https://github.com/') ? url : `https://github.com/${url}`) :\n    undefined;\n\n  return (\n    <VisitButton\n      className={className}\n      disabled={true}\n      url={githubUrl}\n      title={title}\n      icon={<GitHubIcon />}\n    />);\n}\n\nGithubLinkButton.propTypes = {\n  title: PropTypes.string,\n  url: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default GithubLinkButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUIDataTable from 'mui-datatables';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst cellStyle = {\n  maxWidth: 150,\n  minWidth: 32,\n  wordBreak: 'break-word',\n  overflowWrap: 'break-word',\n  padding: '4px 4px 4px 8px',\n  cursor: 'pointer',\n  fontSize: 12,\n};\n\nconst theme = createMuiTheme({\n  overrides: {\n    MUIDataTableToolbar: {\n      root: {\n        // padding: '0px 8px 0px 8px',\n      },\n    },\n    MUIDataTable: {\n      paper: {\n        padding: 0,\n      },\n      responsiveScrollMaxHeight: {\n        maxHeight: 'calc(100vh - 170px) !important',\n      },\n    },\n    MUIDataTableHeadCell: {\n      root: {\n        ...cellStyle,\n        fontWeight: 'bold',\n      },\n    },\n    MUIDataTableBodyCell: {\n      root: cellStyle,\n    },\n    MUIDataTableSelectCell: {\n      expandDisabled: {\n        // Soft hide the button.\n        visibility: 'hidden',\n      },\n    },\n    MUIDataTableFilter: {\n      root: {\n        minWidth: 400,\n      },\n    },\n  },\n});\n\nfunction Table({ title, data, columns, options, nested = false }) {\n  const onItemClick = (rowData, rowMeta) => {\n    const item = data[rowMeta.dataIndex];\n    console.log(item);\n  };\n\n  // overwrite options\n  const updatedOptions = Object.assign({\n    pagination: true,\n    responsive: nested ? 'stacked' : 'scrollMaxHeight',\n    rowsPerPageOptions: nested ? [10, 50, 100, 1000] : [50, 100, 500, 1000],\n    rowsPerPage: nested ? 10 : 50,\n    filterType: 'multiselect',\n    fixedHeader: true,\n    resizableColumns: false,\n    selectableRows: 'none',\n    isRowSelectable: () => false,\n    onRowClick: onItemClick,\n    print: true,\n  }, options);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <MUIDataTable\n        className=\"data-table\"\n        title={title}\n        data={data}\n        columns={columns}\n        options={updatedOptions}\n      />\n    </MuiThemeProvider>\n  );\n}\n\nTable.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.array,\n  columns: PropTypes.array,\n  options: PropTypes.object,\n  nested: PropTypes.bool,\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '@material-ui/core/Link';\n\nfunction TextLink({ url, title = 'link', ...args }) {\n  return (\n    <Link\n      variant=\"body2\"\n      color=\"primary\"\n      { ...args }\n      target=\"_blank\"\n      href={url}\n      style={{ fontSize: 12 }}\n    >\n      {title}\n    </Link>);\n}\n\nTextLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string,\n};\n\nexport default TextLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport TextLink from '../TextLink';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingInlineStart: '20px',\n  },\n}));\n\n\nfunction CellList({ value = [], targetKey }) {\n  const classes = useStyles();\n  const showLast = 3;\n\n  if (typeof value === 'string' || !value) {\n    value = value || '';\n    return (\n      <span>\n        {value.startsWith('http') ? <TextLink url={value} title={value} /> : value}\n      </span>);\n  }\n\n  const list = Array.isArray(value) ? value : Object.keys(value);\n  return (\n    <ul className={classes.list}>\n      {list\n        .filter((i, index) => index < showLast)\n        .map((item, index) => {\n          let data = item;\n          if (typeof item === 'object') {\n            if (targetKey && item[targetKey]) {\n              data = item[targetKey];\n            } else {\n              data = JSON.stringify(item);\n            }\n          }\n          return (\n            <li key={index}>\n              {data.startsWith('http') ? <TextLink url={data} title={data} /> : data}\n            </li>\n          );\n        })}\n    </ul>);\n}\n\nCellList.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n  targetKey: PropTypes.string,\n};\n\nexport default CellList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction CellParagraph({ value = '', length = 25 }) {\n  return (<span>\n    {`${value.substring(0, length)}${value.length > length ? '...' : ''}`}\n  </span>);\n}\n\nCellParagraph.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  length: PropTypes.number,\n};\n\nexport default CellParagraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  img: {\n    maxHeight: 65,\n    maxWidth: '100%',\n  },\n}));\n\nfunction CellImage({ value = '', alt = '-' }) {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"center\" align=\"center\">\n      {value && <img src={value} alt={alt} className={classes.img}/>}\n    </Grid>);\n}\n\nCellImage.propTypes = {\n  value: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default CellImage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\n\nimport CellList from './table/CellList';\n\nconst maxHeight = 480;\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(2),\n  },\n  listContainer: {\n    maxHeight,\n    overflow: 'auto',\n  },\n  list: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n  image: {\n    maxHeight,\n  },\n}));\n\nfunction ProjectDetails({ project = {} }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n\n  return (\n    <Paper className={classes.container}>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <img src={project.g0vJson.thumbnail} className={classes.image} alt=\"thumbnail\"/>\n          </Grid>\n        </Grid>\n        <Grid item xs={8} className={classes.listContainer}>\n          <List className={classes.list}>\n            {Object.keys(project.g0vJson).map((key, index)=>{\n              return (\n                <ListItem alignItems=\"flex-start\" divider={true} key={index}>\n                  <ListItemText\n                    primary={\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {t(`table.project.${key}`)}\n                      </Typography>\n                    }\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.inline}\n                          color=\"textPrimary\"\n                        >\n                          <CellList value={project.g0vJson[key]} targetKey=\"type\" />\n                        </Typography>\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        </Grid>\n      </Grid>\n    </Paper>);\n}\n\nProjectDetails.propTypes = {\n  project: PropTypes.object,\n};\n\nexport default ProjectDetails;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Iframe from 'react-iframe';\nimport { useTranslation } from 'react-i18next';\n\nimport TextLink from './TextLink';\n\nconst useStyles = makeStyles((theme) => ({\n  iframe: {\n    width: 500,\n    height: 450,\n    border: 'none',\n    marginBottom: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nfunction G0vJsonIconButton({ url, repo, className }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [open, setOpen] = useState(false);\n\n  const size = 'small';\n  const title = url ? t('g0vJson.helpEdit') : t('g0vJson.helpAdd');\n\n  const params = [\n    `repo=${repo}`,\n  ];\n\n  const iframeUrl = `https://g0v.github.io/editor?${params.join('&')}`;\n\n  return (\n    <React.Fragment>\n      <Tooltip title={title}>\n        <IconButton\n          className={className}\n          aria-label={title}\n          size={size}\n          onClick={()=>setOpen(true)}\n        >\n          { url ? <EditIcon /> : <AddIcon />}\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        open={open}\n        onBackdropClick={()=>{}}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"customized-dialog-title\">\n          {t('g0vJson.editor')} (<TextLink url=\"https://github.com/g0v/editor\" title=\"GitHub\" variant=\"h6\"/>)\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={()=>setOpen(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          <Iframe\n            url={iframeUrl}\n            width=\"500px\"\n            className={classes.iframe}\n            display=\"initial\"\n            position=\"relative\"\n          />\n        </DialogContent>\n      </Dialog>\n\n    </React.Fragment>\n  );\n}\n\nG0vJsonIconButton.propTypes = {\n  url: PropTypes.string,\n  repo: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default G0vJsonIconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nconst useStyles = makeStyles((theme) => ({\n  nestedContainer: {\n    backgroundColor: 'rgba(0,0,0,0.1)',\n  },\n}));\n\nfunction NestedTableContainer({ columns = [], children }) {\n  const classes = useStyles();\n\n  return (\n    <TableRow>\n      <TableCell colSpan={columns.length + 1} className={classes.nestedContainer}>\n        {children}\n      </TableCell>\n    </TableRow>);\n}\n\nNestedTableContainer.propTypes = {\n  columns: PropTypes.array,\n  children: PropTypes.node,\n};\n\nexport default NestedTableContainer;\n","const env = window.location.hostname.includes('-prd-') ? 'prd' : 'dev';\n\nconst cache = {};\n\nexport const getGithubDataUrl = () => {\n  return `https://awesome-g0v-projects-${env}-data.s3.amazonaws.com/data.json`;\n};\n\nexport const getHackmdData = async () => {\n  const key = 'hackmd';\n  if (cache[key]) return cache[key];\n\n  const dataUrl = `https://awesome-g0v-projects-${env}-data.s3.amazonaws.com/hackmd.json`;\n\n  const res = await fetch(dataUrl);\n  const output = await res.json();\n\n  cache[key] = output;\n\n  return output;\n};\n\nexport const getHackmdDataByTag = async (inRepos) => {\n  const key = 'hackmd-byTag';\n  if (cache[key]) return cache[key];\n\n  const hackmdData = await getHackmdData();\n\n  // group by tags\n  const list = {};\n\n  hackmdData.forEach((record) => {\n    const { lastchangeAt, title } = record;\n    record.tags = record.tags || [];\n    record.tags.forEach((tag) => {\n      const data = list[tag] || {\n        tag,\n        tagUrl: `https://g0v.hackmd.io/?nav=overview&tags=%5B\"${tag}\"%5D`,\n        recentTitle: '',\n        recentLastChangedAt: undefined,\n        records: [],\n        githubRepoUrl: '',\n      };\n      data.records.push(record);\n\n      if (!data.recentLastChangedAt || data.recentLastChangedAt < lastchangeAt) {\n        data.recentLastChangedAt = lastchangeAt;\n        data.recentTitle = title;\n      }\n\n      list[tag] = data;\n    });\n  });\n\n  const repos = inRepos || await getRepos();\n\n  const output = Object.keys(list)\n    .map((key) => {\n      const item = list[key];\n      const matchRepo = repos.find((x) => {\n        const targetName = item.tag.toLowerCase();\n\n        if (targetName === 'g0v') return false;\n\n        return x.owner.login.toLowerCase() === targetName ||\n          x.name.toLowerCase() === targetName ||\n          x.name.toLowerCase().startsWith(targetName) ||\n          targetName.startsWith(x.name.toLowerCase());\n      });\n      if (matchRepo) {\n        item.githubRepoUrl = matchRepo.html_url;\n        matchRepo.hackmdUrl = item.tagUrl;\n      }\n      return item;\n    }).sort((a, b) => a.recentLastChangedAt > b.recentLastChangedAt ? -1 : 1);\n\n  cache[key] = output;\n\n  return output;\n};\n\nexport const getGithubData = async () => {\n  const key = 'github';\n  if (cache[key]) return cache[key];\n\n  const dataUrl = getGithubDataUrl();\n  const res = await fetch(dataUrl);\n  const output = await res.json();\n\n  cache[key] = output;\n\n  return output;\n};\n\nexport const getOrganizations = async () => {\n  const { data } = await getGithubData();\n  return data\n    .filter((x) => x.githubInfo.type === 'Organization')\n    .sort((a, b) => a.name > b.name ? 1 : -1);\n};\n\nexport const getRepos = async () => {\n  const { data } = await getGithubData();\n  const repos = data\n    .reduce((items, project) => [...items, ...project.repos], [])\n    // Ignore fork projects\n    .filter((x) => !x.fork)\n    .sort((a, b) => a.pushed_at < b.pushed_at ? 1 : -1)\n    .map((item) => {\n      item.languages = Object.keys(item.languages).map((key) => key);\n      return item;\n    });\n\n  // link\n  await getHackmdDataByTag(repos);\n\n  return repos;\n};\n\nexport const getProjects = async () => {\n  const repos = await getRepos();\n\n  return repos\n    .filter((x) => x.g0vJsonUrl)\n    .map((item) => {\n      item.g0vJson.name_zh = item.g0vJson.name_zh || item.g0vJson.name;\n      item.g0vJson.description_zh = item.g0vJson.description_zh || item.g0vJson.description;\n      return item;\n    });\n};\n\nexport const getProposalsDataUrl = () => {\n  return 'https://sheets.googleapis.com/v4/spreadsheets/1C9-g1pvkfqBJbfkjPB0gvfBbBxVlWYJj6tTVwaI5_x8/values/%E5%A4%A7%E6%9D%BE%E6%8F%90%E6%A1%88%E5%88%97%E8%A1%A8!A1:W10000?key=AIzaSyBhiqVypmyLHYPmqZYtvdSvxEopcLZBdYU'; // eslint-disable-line\n};\n\nexport const getProposalEvents = async () => {\n  const url = getProposalsDataUrl();\n  const res = await fetch(url);\n  const { values } = await res.json();\n\n  const headers = values.shift().map((x) => x.replace(/ /g, '_'));\n  const events = {};\n\n  values.forEach((row) => {\n    const rowData = headers.reduce((obj, header, index) => {\n      row[index] = row[index] || '';\n      if (['manpower', 'three_brief', 'tags', 'license_data'].includes(header)) {\n        obj[header] = row[index]\n          .replace(/[.,、，；\\\\/](\\s+)?/g, ',')\n          .split(',');\n      } else {\n        obj[header] = row[index];\n      }\n      return obj;\n    }, {});\n    events[rowData.term] = events[rowData.term] || {\n      term: rowData.term,\n      date: rowData.date,\n      event_name: rowData.event_name,\n      dummy_event_type: rowData.dummy_event_type,\n      proposals: [],\n    };\n    events[rowData.term].proposals.push(rowData);\n  });\n\n  return Object.keys(events).reverse().map((key) => events[key]);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  badget: {\n    border: '1px solid rgba(0,0,0,0.1)',\n    borderRadius: 3,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    textAlign: 'center',\n  },\n}));\n\nfunction ProjectStatusBadget({ value }) {\n  const classes = useStyles();\n\n  if (!value) return null;\n\n  const color = 'textPrimary';\n\n  return (\n    <div className={classes.badget}>\n      <Typography color={color} variant=\"inherit\">\n        {value.toLowerCase()}\n      </Typography>\n    </div>);\n}\n\nProjectStatusBadget.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default ProjectStatusBadget;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport CellList from './table/CellList';\nimport CellParagraph from './table/CellParagraph';\nimport CellImage from './table/CellImage';\nimport VisitButton from './VisitButton';\nimport TextLink from './TextLink';\nimport ProjectDetails from './ProjectDetails';\nimport G0vJsonIconButton from './G0vJsonIconButton';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport GithubLinkButton from './GithubLinkButton';\nimport { getProjects } from '../data';\nimport ProjectStatusBadget from './ProjectStatusBadget';\n\nfunction ProjectTable({ data: inData }) {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n  const [filterOptions, setFilterOptions] = useState({\n    status: [],\n    keywords: [],\n    needs: [],\n    languages: [],\n  });\n\n  const title = t('table.project.title');\n\n  const columns = [{\n    name: 'g0vJson.status',\n    label: t('table.project.status'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: filterOptions.status,\n      },\n      sort: true,\n      customBodyRender: (value = '') => <ProjectStatusBadget value={value} />,\n    },\n  }, {\n    name: 'owner.login',\n    label: t('table.project.org'),\n    options: {\n      filter: true,\n      sort: true,\n      customBodyRender(value) {\n        return (\n          <TextLink title={value} url={`https://github.com/${value}`} />);\n      },\n    },\n  }, {\n    name: 'g0vJson.author',\n    label: t('table.project.author'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJson.thumbnail',\n    label: t('table.project.thumbnail'),\n    options: {\n      filter: false,\n      sort: false,\n      display: false,\n      customBodyRender: (value = []) => <CellImage value={value[0]} />,\n    },\n  }, {\n    name: 'name',\n    label: t('table.project.repo'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJson.name',\n    label: t('table.project.name'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJson.name_zh',\n    label: t('table.project.name_zh'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJson.description',\n    label: t('table.project.description'),\n    options: {\n      display: false,\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <CellParagraph value={value} />,\n    },\n  }, {\n    name: 'g0vJson.description_zh',\n    label: t('table.project.description_zh'),\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <CellParagraph value={value} />,\n    },\n  }, {\n    name: 'g0vJson.keywords',\n    label: t('table.project.keywords'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: filterOptions.keywords,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value} />,\n    },\n  }, {\n    name: 'g0vJson.needs',\n    label: t('table.project.needs'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: filterOptions.needs,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value} />,\n    },\n  }, {\n    name: 'g0vJson.licenses',\n    label: t('table.project.licenses'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <CellList value={value} targetKey=\"type\" />,\n    },\n  }, {\n    name: 'languagePrimary',\n    label: t('table.project.language'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'languageSecondary',\n    label: t('table.project.language2'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'languages',\n    label: t('table.project.allLanguages'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: filterOptions.languages,\n      },\n      sort: false,\n      display: true,\n      customBodyRender: (value) => <CellList value={value} />,\n    },\n  }, {\n    name: 'open_issues',\n    label: t('table.project.issues'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'contributors.length',\n    label: t('table.project.contributors'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'created_at',\n    label: t('table.project.createdAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'pushed_at',\n    label: t('table.project.pushedAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'g0vJsonUrl',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value, { rowData }) => {\n        const repo = `${rowData[1]}/${rowData[4]}`;\n        return (<G0vJsonIconButton url={value} repo={repo} />);\n      },\n    },\n  }, {\n    name: 'g0vJson.homepage',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender(value) {\n        return (\n          <VisitButton url={value} title={t('table.project.homepage')} icon={<LanguageIcon />} />);\n      },\n    },\n  }, {\n    name: 'g0vJson.document',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender(value) {\n        return (\n          <VisitButton url={value} title={t('table.project.documents')} icon={<DescriptionIcon />} />);\n      },\n    },\n  }, {\n    name: 'html_url',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <GithubLinkButton url={value} />,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <ProjectDetails project={item} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    const allStatus = [];\n    const allKeywords = [];\n    const allNeeds = [];\n    const allLanguages = [];\n    data.forEach((item) => {\n      item.languages.forEach((key) => {\n        if (!allLanguages.includes(key)) {\n          allLanguages.push(key);\n        }\n      });\n\n      if (Array.isArray(item.g0vJson.keywords)) {\n        item.g0vJson.keywords.forEach((key) => {\n          if (!allKeywords.includes(key)) {\n            allKeywords.push(key);\n          }\n        });\n      }\n\n      if (Array.isArray(item.g0vJson.needs)) {\n        item.g0vJson.needs.forEach((key) => {\n          if (!allNeeds.includes(key)) {\n            allNeeds.push(key);\n          }\n        });\n      }\n\n      if (item.g0vJson.status) {\n        if (!allStatus.includes(item.g0vJson.status.toLowerCase())) {\n          allStatus.push(item.g0vJson.status.toLowerCase());\n        }\n      }\n    });\n    setFilterOptions({\n      languages: allLanguages,\n      keywords: allKeywords,\n      needs: allNeeds,\n      status: allStatus,\n    });\n  }, [data]);\n\n  useEffect(() => {\n    if (inData) {\n      setData(inData);\n    } else {\n      (async () => {\n        setData(await getProjects());\n      })();\n    }\n  }, [inData]);\n\n  return (\n    <Table\n      title={title}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n\nProjectTable.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default ProjectTable;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport { green } from '@material-ui/core/colors';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nimport Table from './Table';\nimport GithubLinkButton from './GithubLinkButton';\nimport TextLink from './TextLink';\nimport CellList from './table/CellList';\nimport VisitButton from './VisitButton';\nimport G0vJsonIconButton from './G0vJsonIconButton';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport ProjectDetails from './ProjectDetails';\nimport { getRepos } from '../data';\n\nfunction RepoTable({ data: inData, nested = false }) {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n  const [languages, setLanguages] = useState([]);\n\n  const title = t('table.repo.title');\n\n  const columns = [{\n    name: 'archived',\n    label: t('table.repo.activity'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender(value) {\n        return value ? <ErrorIcon color=\"secondary\" /> : <WbSunnyIcon style={{ color: green[500] }} />;\n      },\n    },\n  }, {\n    name: 'owner.login',\n    label: t('table.repo.org'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender(value) {\n        return (\n          <TextLink title={value} url={`https://github.com/${value}`} />);\n      },\n    },\n  }, {\n    name: 'name',\n    label: t('table.repo.name'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'description',\n    label: t('table.repo.description'),\n    options: {\n      filter: false,\n      sort: false,\n    },\n  }, {\n    name: 'languagePrimary',\n    label: t('table.repo.language'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'languageSecondary',\n    label: t('table.repo.language2'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'languages',\n    label: t('table.repo.allLanguages'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: languages,\n      },\n      sort: false,\n      display: false,\n      customBodyRender: (value) => <CellList value={value} />,\n    },\n  }, {\n    name: 'open_issues',\n    label: t('table.repo.issues'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'contributors.length',\n    label: t('table.repo.contributors'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'created_at',\n    label: t('table.repo.createdAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'pushed_at',\n    label: t('table.repo.pushedAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'license.spdx_id',\n    label: t('table.repo.license'),\n    options: {\n      display: false,\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJsonUrl',\n    label: t('table.repo.g0vJsonProvided'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value, { rowData }) => {\n        const repo = `${rowData[1]}/${rowData[2]}`;\n        return (<G0vJsonIconButton url={value} repo={repo} />);\n      },\n    },\n  }, {\n    name: 'hackmdUrl',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.repo.hackmdUrl')} icon={<DescriptionIcon />} />,\n    },\n  }, {\n    name: 'html_url',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender: (value) => <GithubLinkButton url={value} />,\n    },\n  }];\n\n  const options = {\n    filterType: 'multiselect',\n    expandableRows: true,\n    isRowExpandable(dataIndex) {\n      return data[dataIndex].g0vJsonUrl;\n    },\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <ProjectDetails project={item} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    const allLanguages = [];\n    data.forEach((item) => {\n      item.languages.forEach((key) => {\n        if (!allLanguages.includes(key)) {\n          allLanguages.push(key);\n        }\n      });\n    });\n    setLanguages(allLanguages);\n  }, [data]);\n\n  useEffect(() => {\n    if (inData) {\n      setData(inData);\n    } else {\n      (async () => {\n        setData(await getRepos());\n      })();\n    }\n  }, [inData]);\n\n  return (\n    <Table\n      title={title}\n      data={data}\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nRepoTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default RepoTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// import { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport RepoTable from './RepoTable';\nimport GithubLinkButton from './GithubLinkButton';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport CellImage from './table/CellImage';\nimport { getOrganizations } from '../data';\n// const useStyles = makeStyles((theme) => ({}));\n\nfunction OrganizationTable({ data: inData }) {\n  // const classes = useStyles();\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n\n  const title = t('table.organization.title');\n\n  const columns = [{\n    name: 'githubInfo.type',\n    label: t('table.organization.type'),\n    options: {\n      filter: false,\n      sort: true,\n      display: false,\n    },\n  }, {\n    name: 'githubInfo.avatar_url',\n    label: t('table.organization.avatar'),\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <CellImage value={value} />,\n    },\n  }, {\n    name: 'name',\n    label: t('table.organization.name'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'githubInfo.login',\n    label: t('table.organization.id'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'githubInfo.description',\n    label: t('table.organization.description'),\n    options: {\n      filter: false,\n      sort: false,\n    },\n  }, {\n    name: 'repos.length',\n    label: t('table.organization.repos'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'githubInfo.html_url',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender: (value)=><GithubLinkButton url={value} />,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      const repos = item.repos.sort((a, b) => a.pushed_at > b.pushed_at ? -1 : 1);\n      return (\n        <NestedTableContainer columns={columns}>\n          <RepoTable data={repos} nested={true} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n\n  useEffect(() => {\n    if (inData) {\n      setData(inData);\n    } else {\n      (async () => {\n        setData(await getOrganizations());\n      })();\n    }\n  }, [inData]);\n\n  return (\n    <Table\n      title={title}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n\nOrganizationTable.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default OrganizationTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport GithubLinkButton from './GithubLinkButton';\nimport TextLink from './TextLink';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport RepoTable from './RepoTable';\nimport CellImage from './table/CellImage';\nimport { getRepos } from '../data';\n\nfunction DeveloperTable({ repos: inRepos, nested = false }) {\n  const { t } = useTranslation();\n  const [repos, setRepos] = useState([]);\n  const [data, setData] = useState([]);\n\n  const title = t('table.developer.title');\n\n  const columns = [{\n    name: 'details.type',\n    label: t('table.developer.type'),\n    options: {\n      filter: true,\n      sort: true,\n      display: false,\n    },\n  }, {\n    name: 'details.avatar_url',\n    label: t('table.developer.avatar'),\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <CellImage value={value} />,\n    },\n  }, {\n    name: 'details.login',\n    label: t('table.developer.githubId'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'majorRepoName',\n    label: t('table.developer.majorRepoName'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <TextLink title={value} url={`https://github.com/${value}`} />,\n    },\n  }, {\n    name: 'majorContributions',\n    label: t('table.developer.majorContributions'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'repos.length',\n    label: t('table.developer.repos'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'averageContributions',\n    label: t('table.developer.averageContributions'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'details.html_url',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value)=><GithubLinkButton url={value} />,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <RepoTable data={item.repos} nested={true} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    setData(getContributorsFromRepos(repos));\n  }, [repos]);\n\n  useEffect(() => {\n    if (inRepos) {\n      setRepos(inRepos);\n    } else {\n      (async () => {\n        setRepos(await getRepos());\n      })();\n    }\n  }, [inRepos]);\n\n  return (\n    <Table\n      title={title}\n      data={data}\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nDeveloperTable.propTypes = {\n  repos: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default DeveloperTable;\n\n\nfunction getContributorsFromRepos(repos) {\n  const list = {};\n\n  repos.forEach((repo) => {\n    const { contributors } = repo;\n    contributors.forEach((contributor) => {\n      const { contributions: repoContributions } = contributor;\n      const key = `${contributor.type}-${contributor.login}`;\n      const data = list[key] || {\n        details: contributor,\n        repos: [],\n        majorRepoName: '',\n        majorContributions: 0,\n        totalContributions: 0,\n        averageContributions: 0,\n      };\n\n      data.repos.push(repo);\n      data.totalContributions += repoContributions;\n\n      if (repoContributions > data.majorContributions) {\n        data.majorContributions = repoContributions;\n        data.majorRepoName = repo.name;\n      }\n\n      list[key] = data;\n    });\n  });\n\n  return Object.keys(list)\n    .map((key) => {\n      const { details, totalContributions, repos } = list[key];\n      list[key].averageContributions = parseInt((totalContributions / repos.length).toFixed(0));\n\n      // overwrite the Anonymous\n      if (details.type === 'Anonymous') {\n        details.login = '沒有人';\n        details.avatar_url = 'https://avatars1.githubusercontent.com/u/2668086?s=200&v=4';\n        details.html_url = 'https://github.com/g0v';\n      }\n\n      return list[key];\n    })\n    .sort((a, b) => a.repos.length > b.repos.length ? -1 : 1);\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport CellList from './table/CellList';\nimport VisitButton from './VisitButton';\n\nfunction HackmdTable({ data, nested = false }) {\n  const { t } = useTranslation();\n  const [tags, setTags] = useState([]);\n\n  const title = t('table.hackmd.listTitle');\n\n  const columns = [{\n    name: 'title',\n    label: t('table.hackmd.title'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'userpath',\n    label: t('table.hackmd.user'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'tags',\n    label: t('table.hackmd.tags'),\n    options: {\n      display: !nested,\n      filter: true,\n      filterOptions: {\n        names: tags,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value}/>,\n    },\n  }, {\n    name: 'publishType',\n    label: t('table.hackmd.publishType'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'publishedAt',\n    label: t('table.hackmd.publishedAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => value ? moment(value).format('YYYY/MM/DD') : '',\n    },\n  }, {\n    name: 'createdAt',\n    label: t('table.hackmd.createdAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'lastchangeAt',\n    label: t('table.hackmd.lastchangeAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD HH:MM'),\n    },\n  }, {\n    name: 'id',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender(value) {\n        return (\n          <VisitButton url={`https://g0v.hackmd.io/${value}`} title={t('table.hackmd.hackmd')} icon={<DescriptionIcon />}/>);\n      },\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    isRowExpandable: () => false,\n  };\n\n  useEffect(() => {\n    const allTags = [];\n    data.forEach(({ tags = [] }) => {\n      tags.forEach((tag) => {\n        if (!allTags.includes(tag)) {\n          allTags.push(tag);\n        }\n      });\n    });\n\n    setTags(allTags);\n  }, [data]);\n\n  return (\n    <Table\n      title={title}\n      data={data}s\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nHackmdTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default HackmdTable;\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport VisitButton from './VisitButton';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport HackmdTable from './HackmdTable';\nimport GithubLinkButton from './GithubLinkButton';\nimport { getHackmdDataByTag } from '../data';\n\nfunction HackmdTagTable() {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n\n  const title = t('table.hackmdTag.listTitle');\n\n  const columns = [{\n    name: 'tag',\n    label: t('table.hackmdTag.tag'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'recentTitle',\n    label: t('table.hackmdTag.recentTitle'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'recentLastChangedAt',\n    label: t('table.hackmdTag.recentLastChangedAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD HH:MM'),\n    },\n  }, {\n    name: 'records.length',\n    label: t('table.hackmdTag.records'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'githubRepoUrl',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <GithubLinkButton url={value} />,\n    },\n  }, {\n    name: 'tagUrl',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender(value) {\n        return (\n          <VisitButton url={value} title={t('table.hackmdTag.hackmd')} icon={<DescriptionIcon />}/>);\n      },\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <HackmdTable data={item.records} nested={true} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    (async () => {\n      setData(await getHackmdDataByTag());\n    })();\n  }, []);\n\n  return (\n    <Table\n      title={title}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n\nexport default HackmdTagTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport LooksOneIcon from '@material-ui/icons/LooksOne';\nimport LooksTwoIcon from '@material-ui/icons/LooksTwo';\nimport Looks3Icon from '@material-ui/icons/Looks3';\n\nimport Table from './Table';\nimport CellList from './table/CellList';\nimport VisitButton from './VisitButton';\n\nfunction ProposalTable({ data, nested = false }) {\n  const { t } = useTranslation();\n  const [manpowers, setManpowers] = useState([]);\n\n  const title = t('table.proposal.listTitle');\n\n  const columns = [{\n    name: 'term',\n    label: t('table.proposal.term'),\n    options: {\n      display: !nested,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'event_name',\n    label: t('table.proposal.eventName'),\n    options: {\n      display: !nested,\n      filter: !nested,\n      sort: true,\n    },\n  }, {\n    name: 'dummy_event_type',\n    label: t('table.proposal.eventType'),\n    options: {\n      display: !nested,\n      filter: !nested,\n      sort: true,\n    },\n  }, {\n    name: 'date',\n    label: t('table.proposal.date'),\n    options: {\n      display: !nested,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'project',\n    label: t('table.proposal.project'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'owner_name',\n    label: t('table.proposal.ownerName'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'slack_id',\n    label: t('table.proposal.slackId'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'slack_channel',\n    label: t('table.proposal.slackChannel'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'three_brief',\n    label: t('table.proposal.threeBrief'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <CellList value={value}/>,\n    },\n  }, {\n    name: 'manpower',\n    label: t('table.proposal.manpower'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: manpowers,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value}/>,\n    },\n  }, {\n    name: 'tags',\n    label: t('table.proposal.tags'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: manpowers,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value}/>,\n    },\n  }, {\n    name: 'education_project',\n    label: t('table.proposal.educationProject'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'license_data',\n    label: t('table.proposal.license'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'video_link',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.video')} icon={<VideocamIcon />}/>,\n    },\n  }, {\n    name: 'guideline',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.guideline')} icon={<DescriptionIcon />}/>,\n    },\n  }, {\n    name: 'other_document',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.otherDocument')} icon={<LooksOneIcon />}/>,\n    },\n  }, {\n    name: 'other_document2',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.otherDocument')} icon={<LooksTwoIcon />}/>,\n    },\n  }, {\n    name: 'other_document3',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.otherDocument')} icon={<Looks3Icon />}/>,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    isRowExpandable: () => false,\n  };\n\n  useEffect(() => {\n    setManpowers([]);\n  }, []);\n\n  return (\n    <Table\n      title={title}\n      data={data}s\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nProposalTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default ProposalTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport { getProposalEvents } from '../data';\nimport ProposalTable from './ProposalTable';\n\nfunction ProposalEventTable({ data: inData, nested = false }) {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n\n  const title = t('table.proposal.listTitle');\n\n  const columns = [{\n    name: 'term',\n    label: t('table.proposal.term'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'event_name',\n    label: t('table.proposal.eventName'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'dummy_event_type',\n    label: t('table.proposal.eventType'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'date',\n    label: t('table.proposal.date'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'proposals.length',\n    label: t('table.proposal.proposalCount'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <ProposalTable data={item.proposals} nested={true} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    if (inData) {\n      setData(inData);\n    } else {\n      (async () => {\n        setData(await getProposalEvents());\n      })();\n    }\n  }, [inData]);\n\n  return (\n    <Table\n      title={title}\n      data={data}s\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nProposalEventTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default ProposalEventTable;\n","import ProjectTable from './components/ProjectTable';\nimport OrganizationTable from './components/OrganizationTable';\nimport RepoTable from './components/RepoTable';\nimport DeveloperTable from './components/DeveloperTable';\nimport HackmdTagTable from './components/HackmdTagTable';\nimport ProposalEventTable from './components/ProposalEventTable';\n\nexport default [{\n  title: 'header.findProjects',\n  path: '/',\n  component: ProjectTable,\n}, {\n  title: 'header.findProposals',\n  path: '/proposals',\n  component: ProposalEventTable,\n}, {\n  title: 'header.findCowriting',\n  path: '/cowriting',\n  component: HackmdTagTable,\n}, {\n  title: 'header.findRepositories',\n  path: '/repositories',\n  component: RepoTable,\n}, {\n  title: 'header.findOrganizations',\n  path: '/organizations',\n  component: OrganizationTable,\n}, {\n  title: 'header.findDevelopers',\n  path: '/developers',\n  component: DeveloperTable,\n}];\n","import React, { useEffect, useState } from 'react';\nimport Link from 'react-router-dom/Link';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport LanguageSelector from './LanguageSelector';\nimport VisitButton from './VisitButton';\nimport GithubLinkButton from './GithubLinkButton';\nimport routes from '../routes';\nimport { getGithubDataUrl, getGithubData } from '../data';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginRight: theme.spacing(1),\n  },\n  space: {\n    flexGrow: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdatedAt, setLastUpdatedAt] = useState('');\n\n  useEffect(() => {\n    setTimeout(async () => {\n      const { updatedAt } = await getGithubData();\n      setLastUpdatedAt(updatedAt);\n      setIsLoading(false);\n    }, 5000);\n  }, []);\n\n  return (\n    <AppBar position=\"fixed\" color=\"default\">\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h6\" className={classes.title}>\n          {t('app.name')}\n        </Typography>\n        {routes.map(({ title, path }) => (\n          <Button to={path} key={title} component={Link}>\n            {t(title)}\n          </Button>\n        ))}\n\n        <div className={classes.space}></div>\n\n        {isLoading && <CircularProgress size={20} color=\"inherit\" className={classes.button} />}\n\n        {lastUpdatedAt &&\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            {t('app.updatedAt')} {moment(lastUpdatedAt).fromNow()}\n          </Typography>}\n        <VisitButton\n          className={classes.button}\n          url={getGithubDataUrl()}\n          title={'Download JSON'}\n          icon={<CloudDownloadIcon />}\n        />\n        <GithubLinkButton\n          className={classes.button}\n          url='chunyenHuang/awesome-g0v-projects'\n        />\n        <LanguageSelector />\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nimport './i18n';\n\nimport Header from './components/Header';\nimport routes from './routes';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {},\n  spinner: {\n    position: 'absolute',\n    top: 150,\n    left: 'calc(50% - 20px)',\n  },\n  container: {\n    // padding: theme.spacing(2),\n    paddingTop: 55,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.main}>\n      <Router basename={`${process.env.PUBLIC_URL}`}>\n        <React.Suspense fallback={<CircularProgress className={classes.spinner} />}>\n          <Header />\n          <div className={classes.container}>\n            {routes.map((route, index) => (\n              <Route path={route.path} exact key={index}>\n                <route.component />\n              </Route>\n            ))}\n          </div>\n        </React.Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}